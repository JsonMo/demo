package com.pp2s.wechat.util;

import java.security.spec.AlgorithmParameterSpec;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

import com.alibaba.fastjson.JSONObject;


/**
 * 加解密工具
 * @author nan
 * @date 2019年8月15日
 */
public class CipherUtil {

    private final static String ALGORITHMSTR = "AES/ECB/PKCS5Padding";
    private final static String KEY = "7d6f79e8f4f24ece"; //前后端交互秘钥
    
    /**
     * AES加密,结果用base64编码,前后端交互
     * @param content 明文
     * @return
     * @throws Exception
     */
    public static String encrypt(String content) throws Exception{
//            KeyGenerator kgen = KeyGenerator.getInstance("AES");
//            kgen.init(128);
//            Cipher cipher = Cipher.getInstance(ALGORITHMSTR);   
//            cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(KEY.getBytes(), "AES"));
//            byte[] cipherByte = cipher.doFinal(content.getBytes("utf-8"));
//           return new String(Base64.getEncoder().encode(cipherByte));
    	return content;
    }
    
    /**
     * AES解密,前后端交互
     * @param content 密文
     * @return
     * @throws Exception
     */
    public static String decrypt(String content)  throws Exception{
//        KeyGenerator kgen = KeyGenerator.getInstance("AES");
//        kgen.init(128);
//        Cipher cipher = Cipher.getInstance(ALGORITHMSTR);   
//        cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(KEY.getBytes(), "AES"));
//        byte[] cipherByte = cipher.doFinal(Base64.getDecoder().decode(content.getBytes()));
//       return new String(cipherByte,"utf-8");
    	return content;
    }
    
    /**
     * 针对微信获取手机号解密
     * @param encrypted
     * @param sessionKey
     * @param iv
     * @return
     * @throws Exception
     */
    public static String getWeXinPhone(String encrypted,String sessionKey,String iv) throws Exception {
        byte[] encrypData = Base64.getDecoder().decode(encrypted.getBytes("utf-8"));
        byte[] ivData = Base64.getDecoder().decode(iv.getBytes("utf-8"));
        byte[] keyByte = Base64.getDecoder().decode(sessionKey.getBytes("utf-8"));
        AlgorithmParameterSpec ivSpec = new IvParameterSpec(ivData);
        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
        SecretKeySpec keySpec = new SecretKeySpec(keyByte, "AES");
        cipher.init(Cipher.DECRYPT_MODE, keySpec, ivSpec);
        String resultString = new String(cipher.doFinal(encrypData), "UTF-8");
        JSONObject object = JSONObject.parseObject(resultString);
        String phone = object.getString("phoneNumber");
        return phone;
    }
}
